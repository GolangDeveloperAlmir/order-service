services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: orders
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d orders"]
      interval: 5s
      timeout: 3s
      retries: 20

  redpanda:
    image: redpandadata/redpanda:v24.1.12
    command:
      - redpanda start --overprovisioned --smp 1 --memory 1G --reserve-memory 0M --node-id 0 --check=false
      - --kafka-addr 0.0.0.0:9092,PLAINTEXT://0.0.0.0:19092
      - --advertise-kafka-addr PLAINTEXT://redpanda:9092,PLAINTEXT://localhost:19092
    ports: ["19092:19092","9644:9644"]

  order-service:
    build: .
    depends_on:
      db: { condition: service_healthy }
      redpanda: { condition: service_started }
    environment:
      APP_ENV: local
      HTTP_ADDR: ":8080"
      DATABASE_URL: "postgres://app:app@db:5432/orders?sslmode=disable"
      READ_TIMEOUT: "5s"
      WRITE_TIMEOUT: "10s"
      IDLE_TIMEOUT: "60s"

      KAFKA_BROKERS: "redpanda:9092"
      KAFKA_TOPIC_ORDERS: "orders"
      KAFKA_TOPIC_DLQ: "orders.dlq"
      OUTBOX_RELAY_INTERVAL: "2s"
      OUTBOX_RELAY_BATCH: "200"

      RATE_LIMIT_RPS: "10"
      RATE_LIMIT_BURST: "20"

      # OIDC (optional)
      # OIDC_ISSUER: "https://accounts.google.com"
      # OIDC_AUDIENCE: "my-api"
      # OIDC_REQUIRED_SCOPE: "orders.write"
    ports: ["8080:8080"]
    restart: unless-stopped

volumes:
  pgdata: {}
